name: CI
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout [main]
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 6.22.2

      - uses: actions/setup-node@v2
        with:
          node-version: '17'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm exec nx-cloud start-ci-run
      - run: pnpm exec nx affected --target=build --parallel --max-parallel=3
      - run: pnpm exec nx affected --target=lint --parallel --max-parallel=2
      - run: pnpm exec nx affected --target=test --parallel --max-parallel=2

      - name: Clean Agents
        if: ${{ always() }}
        run: pnpm exec nx-cloud stop-all-agents

  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - uses: pnpm/action-setup@v2
        with:
          version: 6.22.2

      - uses: actions/setup-node@v2
        with:
          node-version: '17'
          cache: 'pnpm'

      - run: pnpm install
      - run: pnpm exec nx-cloud start-ci-run
      - run: pnpm exec nx affected --target=build --parallel --max-parallel=3
      - run: pnpm exec nx affected --target=lint --parallel --max-parallel=2
      - run: pnpm exec nx affected --target=test --parallel --max-parallel=2
      - name: Clean Agents
        if: ${{ always() }}
        run: pnpm exec nx-cloud stop-all-agents

  agents:
    runs-on: ubuntu-latest
    name: Agent - General
    timeout-minutes: 15
    strategy:
      matrix:
        agent: [1, 2]
    steps:
      - uses: actions/checkout@v3'

      - uses: pnpm/action-setup@v2
        with:
          version: 6.22.2

      - uses: actions/setup-node@v2
        with:
          node-version: '17'
          cache: 'pnpm'

      - run: pnpm install
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
